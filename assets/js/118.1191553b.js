(window.webpackJsonp=window.webpackJsonp||[]).push([[118],{412:function(t,e,s){"use strict";s.r(e);var a=s(4),r=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"说说你对redux的理解-其工作原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#说说你对redux的理解-其工作原理"}},[t._v("#")]),t._v(" 说说你对Redux的理解？其工作原理？")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/gH31uF9VIibTzkTGokAAxXicl0ryPc6K9RpQ9ibQ8SUiclVIEcdqIKoe4TJxyZt77lAicZLRZe0o3MD6WOce8KnkcGQ/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),t._v(" "),e("h2",{attrs:{id:"一、是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、是什么"}},[t._v("#")]),t._v(" 一、是什么")]),t._v(" "),e("p",[e("code",[t._v("React")]),t._v("是用于构建用户界面的，帮助我们解决渲染"),e("code",[t._v("DOM")]),t._v("的过程")]),t._v(" "),e("p",[t._v("而在整个应用中会存在很多个组件，每个组件的"),e("code",[t._v("state")]),t._v("是由自身进行管理，包括组件定义自身的"),e("code",[t._v("state")]),t._v("、组件之间的通信通过"),e("code",[t._v("props")]),t._v("传递、使用"),e("code",[t._v("Context")]),t._v("实现数据共享")]),t._v(" "),e("p",[t._v("如果让每个组件都存储自身相关的状态，理论上来讲不会影响应用的运行，但在开发及后续维护阶段，我们将花费大量精力去查询状态的变化过程")]),t._v(" "),e("p",[t._v("这种情况下，如果将所有的状态进行集中管理，当需要更新状态的时候，仅需要对这个管理集中处理，而不用去关心状态是如何分发到每一个组件内部的")]),t._v(" "),e("p",[e("code",[t._v("redux")]),t._v("就是一个实现上述集中管理的容器，遵循三大基本原则：")]),t._v(" "),e("ul",[e("li",[t._v("单一数据源")]),t._v(" "),e("li",[t._v("state 是只读的")]),t._v(" "),e("li",[t._v("使用纯函数来执行修改")])]),t._v(" "),e("p",[t._v("注意的是，"),e("code",[t._v("redux")]),t._v("并不是只应用在"),e("code",[t._v("react")]),t._v("中，还与其他界面库一起使用，如"),e("code",[t._v("Vue")])]),t._v(" "),e("h2",{attrs:{id:"二、工作原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、工作原理"}},[t._v("#")]),t._v(" 二、工作原理")]),t._v(" "),e("p",[e("code",[t._v("redux")]),t._v("要求我们把数据都放在 "),e("code",[t._v("store")]),t._v("公共存储空间")]),t._v(" "),e("p",[t._v("一个组件改变了 "),e("code",[t._v("store")]),t._v(" 里的数据内容，其他组件就能感知到 "),e("code",[t._v("store")]),t._v("的变化，再来取数据，从而间接的实现了这些数据传递的功能")]),t._v(" "),e("p",[t._v("工作流程图如下所示：")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/gH31uF9VIibTzkTGokAAxXicl0ryPc6K9R8a2icC4xMoxt69UBpWWjmib6iaoicJIC2Qan7IKQTtqtXqZKIC5XmbGEDg/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),t._v(" "),e("p",[t._v("根据流程图，可以想象，"),e("code",[t._v("React Components")]),t._v(" 是借书的用户， "),e("code",[t._v("Action Creactor")]),t._v(" 是借书时说的话(借什么书)， "),e("code",[t._v("Store")]),t._v(" 是图书馆管理员，"),e("code",[t._v("Reducer")]),t._v(" 是记录本(借什么书，还什么书，在哪儿，需要查一下)， "),e("code",[t._v("state")]),t._v(" 是书籍信息")]),t._v(" "),e("p",[t._v("整个流程就是借书的用户需要先存在，然后需要借书，需要一句话来描述借什么书，图书馆管理员听到后需要查一下记录本，了解图书的位置，最后图书馆管理员会把这本书给到这个借书人")]),t._v(" "),e("p",[t._v("转换为代码是，"),e("code",[t._v("React Components")]),t._v(" 需要获取一些数据, 然后它就告知 "),e("code",[t._v("Store")]),t._v(" 需要获取数据，这就是就是 "),e("code",[t._v("Action Creactor")]),t._v(" , "),e("code",[t._v("Store")]),t._v(" 接收到之后去 "),e("code",[t._v("Reducer")]),t._v("查一下， "),e("code",[t._v("Reducer")]),t._v(" 会告诉 "),e("code",[t._v("Store")]),t._v(" 应该给这个组件什么数据")]),t._v(" "),e("h2",{attrs:{id:"三、如何使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、如何使用"}},[t._v("#")]),t._v(" 三、如何使用")]),t._v(" "),e("p",[t._v("创建一个"),e("code",[t._v("store")]),t._v("的公共数据区域")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("import { createStore } from 'redux' // 引入一个第三方的方法\nconst store = createStore() // 创建数据的公共存储区域（管理员）\n")])])]),e("p",[t._v("还需要创建一个记录本去辅助管理数据，也就是"),e("code",[t._v("reduecer")]),t._v("，本质就是一个函数，接收两个参数"),e("code",[t._v("state")]),t._v("，"),e("code",[t._v("action")]),t._v("，返回"),e("code",[t._v("state")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// 设置默认值\nconst initialState = {\n  counter: 0\n}\n\nconst reducer = (state = initialState, action) => {\n}\n")])])]),e("p",[t._v("然后就可以将记录本传递给"),e("code",[t._v("store")]),t._v("，两者建立连接。如下：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const store = createStore(reducer)\n")])])]),e("p",[t._v("如果想要获取"),e("code",[t._v("store")]),t._v("里面的数据，则通过"),e("code",[t._v("store.getState()")]),t._v("来获取当前"),e("code",[t._v("state")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("console.log(store.getState());\n")])])]),e("p",[t._v("下面再看看如何更改"),e("code",[t._v("store")]),t._v("里面数据，是通过"),e("code",[t._v("dispatch")]),t._v("来派发"),e("code",[t._v("action")]),t._v("，通常"),e("code",[t._v("action")]),t._v("中都会有"),e("code",[t._v("type")]),t._v("属性，也可以携带其他的数据")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('store.dispatch({\n  type: "INCREMENT"\n})\n\nstore.dispath({\n  type: "DECREMENT"\n})\n\nstore.dispatch({\n  type: "ADD_NUMBER",\n  number: 5\n})\n')])])]),e("p",[t._v("下面再来看看修改"),e("code",[t._v("reducer")]),t._v("中的处理逻辑：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case "INCREMENT":\n      return {...state, counter: state.counter + 1};\n    case "DECREMENT":\n      return {...state, counter: state.counter - 1};\n    case "ADD_NUMBER":\n      return {...state, counter: state.counter + action.number}\n    default: \n      return state;\n  }\n}\n')])])]),e("p",[t._v("注意，"),e("code",[t._v("reducer")]),t._v("是一个纯函数，不需要直接修改"),e("code",[t._v("state")])]),t._v(" "),e("p",[t._v("这样派发"),e("code",[t._v("action")]),t._v("之后，既可以通过"),e("code",[t._v("store.subscribe")]),t._v("监听"),e("code",[t._v("store")]),t._v("的变化，如下：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("store.subscribe(() => {\n  console.log(store.getState());\n})\n")])])]),e("p",[t._v("在"),e("code",[t._v("React")]),t._v("项目中，会搭配"),e("code",[t._v("react-redux")]),t._v("进行使用")]),t._v(" "),e("p",[t._v("完整代码如下：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('const redux = require(\'redux\');\n\nconst initialState = {\n  counter: 0\n}\n\n// 创建reducer\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case "INCREMENT":\n      return {...state, counter: state.counter + 1};\n    case "DECREMENT":\n      return {...state, counter: state.counter - 1};\n    case "ADD_NUMBER":\n      return {...state, counter: state.counter + action.number}\n    default: \n      return state;\n  }\n}\n\n// 根据reducer创建store\nconst store = redux.createStore(reducer);\n\nstore.subscribe(() => {\n  console.log(store.getState());\n})\n\n// 修改store中的state\nstore.dispatch({\n  type: "INCREMENT"\n})\n// console.log(store.getState());\n\nstore.dispatch({\n  type: "DECREMENT"\n})\n// console.log(store.getState());\n\nstore.dispatch({\n  type: "ADD_NUMBER",\n  number: 5\n})\n// console.log(store.getState());\n')])])]),e("h3",{attrs:{id:"小结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),e("ul",[e("li",[t._v("createStore可以帮助创建 store")]),t._v(" "),e("li",[t._v("store.dispatch 帮助派发 action , action 会传递给 store")]),t._v(" "),e("li",[t._v("store.getState 这个方法可以帮助获取 store 里边所有的数据内容")]),t._v(" "),e("li",[t._v("store.subscrible 方法订阅 store 的改变，只要 store 发生改变， store.subscrible 这个函数接收的这个回调函数就会被执行")])]),t._v(" "),e("h2",{attrs:{id:"参考文献"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考文献"}},[t._v("#")]),t._v(" 参考文献")]),t._v(" "),e("ul",[e("li",[t._v("https://cn.redux.js.org/docs/introduction/")]),t._v(" "),e("li",[t._v("https://www.redux.org.cn/docs/basics/Actions.html")]),t._v(" "),e("li",[t._v("https://lulujianglab.com/posts/大白话解析 Redux 、 redux-thunk 、redux-saga 和 react-redux")])])])}),[],!1,null,null,null);e.default=r.exports}}]);