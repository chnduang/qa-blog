(window.webpackJsonp=window.webpackJsonp||[]).push([[131],{428:function(a,e,s){"use strict";s.r(e);var t=s(4),n=Object(t.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"牛客网最新百道前端-javascript-笔试题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#牛客网最新百道前端-javascript-笔试题"}},[a._v("#")]),a._v(" 牛客网最新百道前端 JavaScript 笔试题")]),a._v(" "),e("blockquote"),a._v(" "),e("h2",{attrs:{id:"单选题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#单选题"}},[a._v("#")]),a._v(" 单选题")]),a._v(" "),e("h3",{attrs:{id:"js基础"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js基础"}},[a._v("#")]),a._v(" JS基础")]),a._v(" "),e("h4",{attrs:{id:"js概念与类型检测"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js概念与类型检测"}},[a._v("#")]),a._v(" js概念与类型检测")]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("以下不属于 typeof 运算符返回值的是？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('A. "string"\nB. "function"\nC. "object"\nD. "null"\n复制代码\n')])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("执行以下代码，错误的输出结果是\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('A. 输入：typeof {"x":1} 输出："object" \nB. 输入：typeof 1 输出："number" \nC. 输入：typeof [{x:1}] 输出："array" \nD. 输入：typeof NaN 输出："number"\n复制代码\n')])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("可以用typeof来判断的基本类型有\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. undefined\nB. null\nC. array\nD. object\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("以下不属于JavaScript基本数据类型的是：\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. Boolean\nB. undefined\nC. Symbol\nD. Array\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("以下关于JavaScript中数据类型的说法错误的是\\(\\)\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. 数据类型分为基本数据类型和引用数据类型\nB. JavaScript一共有8种数据类型\nC. Object是引用数据类型，且只存储于堆(heap)中\nD. BigInt是可以表示任意精度整数的基本数据类型，存储于栈(stack)中\n复制代码\n")])])]),e("p",[e("strong",[a._v("答案")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("DCADC\n复制代码\n")])])]),e("h4",{attrs:{id:"逻辑判断"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#逻辑判断"}},[a._v("#")]),a._v(" 逻辑判断")]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("请选择结果为ture的表达式？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. null instanceof Object\nB. null === undefined\nC. null == undefined\nD. NaN == NaN\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下列代码结果为 true 的是？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. Symbol.for('a') === Symbol.for('a')\nB. Symbol('a') === Symbol('a')\nC. NaN === NaN\nD. {} === {}\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("根据如下变量，下列表达式中返回值为true的是\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("var a = 1;\nvar b = [];\nvar c = '';\nvar d = true;\n复制代码\nA. (a || b) === true\nB. (b && c) === true\nC. (c && d) === true\nD. (d || a) === true\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("1==true的返回值是true，这句话是否正确？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. T\nB. F\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面代码输出为true的是\\?\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. console.log([] === []);\nB. console.log(undefined == 0);\nC. console.log(undefined == false);\nD. console.log(false == '');\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("浏览器环境下，以下打印结果为true的是\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('A. console.log("12" === 12)\nB. console.log (NaN === NaN)\nC. console.log (typeof(null) === typeof(window))\nD. console.log ([1,2,3] === [1,2,3])\n复制代码\n')])])]),e("p",[e("strong",[a._v("注意浏览器环境与node环境的差别，比如C选项")])]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("以下表达式，正确的是\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. Number('a') == Number('a')\nB. -1 == true\nC. 3 + '2' === 5\nD. ![] == ''\n复制代码\n")])])]),e("p",[e("strong",[a._v("答案")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("CADADCD\n复制代码\n")])])]),e("h4",{attrs:{id:"math"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#math"}},[a._v("#")]),a._v(" Math")]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("如何把 7.25 四舍五入为最接近的整数\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. Math.round(7.25)\nB. Math.ceil(7.25)\nC. round(7.25)\nD. Math.rnd(7.25)\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面哪个选项可以产生0\\<=num\\<=10的随机整数\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. Math.floor(Math.random()*6)\nB. Math.floor(Math.random()*10)\nC. Math.floor(Math.random()*11)\nD. Math.ceil(Math.random()*10)\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("以下\\( \\)表达式产生一个0\\~7之间\\(含0,7\\)的随机整数\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. Math.floor(Math.random()*6)\nB. Math.floor(Math.random()*7)\nC. Math. floor(Math.random()*8)\n复制代码\n")])])]),e("p",[e("strong",[a._v("答案")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A CD(注意D) C\n复制代码\n")])])]),e("h4",{attrs:{id:"字符串"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[a._v("#")]),a._v(" 字符串")]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("split\\(\\) 方法用于把一个字符串分割成字符串数组。\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. T\nB. F\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("String对象的哪个方法可以寻找子字符串并返回该子字符串位置\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. match()\nB. indexOf()\nC. search()\nD. concat()\n复制代码\n")])])]),e("p",[e("strong",[a._v("答案")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A BC\n复制代码\n")])])]),e("h4",{attrs:{id:"json"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#json"}},[a._v("#")]),a._v(" JSON")]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面哪一个是JSON数据？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('A. ｛name:"xiaoming",age,"student"｝\nB. ｛"name":"xiaoming","age":"student"｝\nC. ｛"xiaoming","student"｝\nD. ["xiaoming","student"]\n复制代码\n')])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面分别使用 JSON.stringify 方法，返回值 res 分别是\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("const fn = function(){}\nconst res = JSON.stringify(fn)\nconst num = 123\nconst res = JSON.stringify(num)\nconst res = JSON.stringify(NaN)\nconst b = true\nconst res = JSON.stringify(b)\n复制代码\nA. 'function'、'123'、'NaN'、'true'\nB. undefined、'123'、undefined、'true'\nC. undefined、'123'、'null'、'true'\nD. undefined、'123'、'null'、undefined\n复制代码\n")])])]),e("p",[e("strong",[a._v("答案")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("BC\n复制代码\n")])])]),e("h4",{attrs:{id:"数组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[a._v("#")]),a._v(" 数组")]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("js数组中不会改变原有数组的方法是\\(\\)\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. push\nB. concat\nC. sort\nD. shift\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下列哪种数组的方法不会修改数组本身\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. slice\nB. splice\nC. sort\nD. unshift\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("JavaScript中需要往数组末尾处添加一个元素，应该使用以下哪个方法：\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. push\nB. pop\nC. shift\nD. unshift\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("以下js操作Array的方法中不能添加元素的是：\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. push\nB. pop\nC. unshift\nD. splice\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("数组以下哪个方法会影响原数组？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. concat\nB. splice\nC. slice\nD. join\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("JavaScript中，下列哪一个Array的方法的返回值类型和其他不同\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. concat\nB. shift\nC. filter\nD. map\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("如下的Array.prototype上的方法中，那个方法不会改变原有的数组？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. push\nB. slice\nC. splice\nD. sort\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("对于一个数字组成的数组 nums，现在需要执行在不改动 nums 的基础上去重操作，返回一个新的无重复元素的数组，以下几段代码能完成这一操作的是\\(\\)\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("// (1)\nconst newNums = Array.from(new Set(nums))\n复制代码\n// (2)\nconst newNums = nums.filter((n, i) => {\n    return nums.indexOf(n) === i\n})\n复制代码\n// (3)\nconst newNums = nums.forEach((n, i) => {\n    return nums.indexOf(n) === i\n})\n复制代码\n// (4)\nconst newNums = nums.reduce((acc, n, i) => {\n    return [].concat(acc, nums.indexOf(n) === i ? n : []\n)\n})\n复制代码\nA. (1)、(2)、(3)、(4)\nB. (1)、(3)、(4)\nC. (1)、(2)、(4)\nD. (1)、(4)\n复制代码\n")])])]),e("p",[e("strong",[a._v("答案")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("BAABB\nBBC\n复制代码\n")])])]),e("h4",{attrs:{id:"正则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正则"}},[a._v("#")]),a._v(" 正则")]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("正则表达式 \\^d+\\[\\^d\\]+ 能匹配下列哪个字符串？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. 123\nB. 123a\nC. d123\nD. 123def\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面哪个不是RegExp对象的方法\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. test\nB. match\nC. exec\nD. compile\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("以下哪项可以去除变量str中的所有空格\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('A. str.replace(`/\\s*/g,""`)\nB. str.replace(`/^\\s|\\s$/g,""`)\nC. str.replace(`/^\\s*/, ""`)\nD. str.replace(`/(\\s*$)/g, ""`)\n复制代码\n')])])]),e("p",[e("strong",[a._v("答案")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("CBA\n复制代码\n")])])]),e("h4",{attrs:{id:"其他"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[a._v("#")]),a._v(" 其他")]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下列函数哪个不是JavaScript的全局函数\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. encodeURI\nB. parseFloat\nC. round\nD. eval\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("编写高性能JavaScript，以下描述错误的是\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('A. 遵循严格模式："use strict"\nB. 将js脚本放在页面顶部，加快渲染页面\nC. 将js脚本成组打包，减少请求，尽量减少使用闭包\nD. 使用非阻塞方式下载js脚本，最小化重绘(repaint)和回流(reflow)\n复制代码\n')])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("有关JavaScript中系统方法的描述，错误的是？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. parseFloat方法：该方法将一个字符串转换成对应的小数\nB. isNaN方法：该方法用于检测参数是否为数值型，如果是，返回true，否则，返回false。\nC. escape方法： 该方法返回对一个字符串编码后的结果字符串\nD. eval方法：该方法将某个参数字符串作为一个JavaScript执行题\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面列出的浏览器，无webkit内核的是\\(\\)\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. chrome\nB. Safari\nC. 搜狗浏览器\nD. Firefox\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下列代码哪个能够实现获取形式为 2017-08-01 形式的日期\\( \\)？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("// A\nvar formatDate=getDate()\n// B\nvar formatDate = new Date()\n// C\nvar formatDate = function (date) {\n    var y = date.getFullYear();\n    var m = date.getMonth() + 1;\n    \n    var d = date.getDate();\n    return y + '-' + m + '-' + d;\n};\n// D\nvar formatDate = function (date) {\n    var y = date.getFullYear();\n    var m = date.getMonth() + 1;\n    m = m < 10 ? '0' + m : m;\n    var d = date.getDate();\n    d = d < 10 ? ('0' + d) : d;\n    return y + '-' + m + '-' + d;\n};\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面哪一项不能最小化重绘\\(repaint\\)和回流\\(reflow\\)\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('A. 需要对元素进行复杂的操作时，可以先隐藏(display:"none")，操作完成后再显示\nB. 需要创建多个DOM节点时，使用DocumentFragment创建完后一次性的加入document\nC. 尽量避免用table布局(table元素一旦触发回流就会导致table里所有的其它元素回流)\nD. 尽量不要使用 css 属性简写，如：用border-width, border-style, border-color代替border\n复制代码\n')])])]),e("p",[e("strong",[a._v("答案")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("CBBDDD\n复制代码\n")])])]),e("h3",{attrs:{id:"js深入"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js深入"}},[a._v("#")]),a._v(" JS深入")]),a._v(" "),e("h4",{attrs:{id:"this"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#this"}},[a._v("#")]),a._v(" this")]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下列哪种方法不能改变this指向\\(\\)\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. eval\nB. apply\nC. bind\nD. call\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("在JavaScript中下面选项关于this描述正确的是\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. 在使用new实例化对象时, this指向这个实例对象\nB. 将对象的方法赋值给变量A。执行A()时 该方法中的this指向这个对象。 \nC. 在函数定义时,this指向全局变量\nD. 在浏览器下的全局范围内，this指向全局对象\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面有关JavaScript中call和apply方法的描述，错误的是？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. call与apply都属于Function.prototype的一个方法，所以每个function实例都有call、apply属性\nB. 两者传递的参数不同，call函数第一个参数都是要传入给当前对象的对象，apply不是\nC. apply传入的是一个参数数组，也就是将多个参数组合成为一个数组传入\nD. call传入的则是直接的参数列表。call 方法可将一个函数的对象上下文从初始的上下文改变为由 thisObj 指定的新对象。\n复制代码\n")])])]),e("p",[e("strong",[a._v("答案")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("AAB\n复制代码\n")])])]),e("h4",{attrs:{id:"作用域-闭包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#作用域-闭包"}},[a._v("#")]),a._v(" 作用域(闭包)")]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("内存泄漏是 javascript 代码中必须尽量避免的，以下几段代码可能会引起内存泄漏的有\\(\\)\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("// (1)\nfunction getName() {\n    name = 'javascript'\n}\ngetName()\n复制代码\n// (2)\nconst elements = {\n    button: document.getElementById('button')\n};\nfunction removeButton() {\n    document.body.removeChild(elements.button);\n}\nremoveButton()\n复制代码\n// (3)\nlet timer = setInterval(() => {\n    const node = document.querySelector('#node') \n    if(node) {\n        clearInterval(timer)\n    }\n}, 1000);\n复制代码\nA. (1)、(2)、(3)\nB. (2)、(3)\nC. (1)、(3)\nD. (1)、(2)\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("那个操作不会造成内存泄露\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. 没有清理的DOM元素引用\nB. 被遗忘的定时器\nC. 事件侦听没有移除\nD. 局部变量不用时，没有设为null\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下列关于闭包理解错误的是\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. 增加一定的内存消耗\nB. 使用不当可能会导致内存泄漏\nC. 可以使用闭包模拟私有方法\nD. 闭包会改动对象的原型链\n复制代码\n")])])]),e("p",[e("strong",[a._v("答案")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("DDD\n复制代码\n")])])]),e("h4",{attrs:{id:"原型与继承"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原型与继承"}},[a._v("#")]),a._v(" 原型与继承")]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("JavaScript实现继承的方式，不正确的是：\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. 原型链继承\nB. 构造函数继承\nC. 组合继承\nD. 关联继承\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("所有对象都有原型\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. T\nB. F\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("以下关于原型链的描述正确的是:\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. 通过原型链继承的属性和对象自己定义的属性等效\nB. 通过原型链可以模拟对象的私有属性\nC. 在对象上访问不存在的属性时,会依次遍历整条原型链\nD. 所有 JavaScript 中的对象都是位于原型链顶端的 `Object` 的实例\n复制代码\n")])])]),e("p",[e("strong",[a._v("答案")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("DBC\n复制代码\n")])])]),e("h4",{attrs:{id:"其他-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他-2"}},[a._v("#")]),a._v(" 其他")]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("以下不属于前端数据存储方式的是？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. jsonp\nB. cookie\nC. localStorage\nD. sessionStorage\n复制代码\n")])])]),e("p",[e("strong",[a._v("答案")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A\n复制代码\n")])])]),e("h3",{attrs:{id:"dom题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dom题"}},[a._v("#")]),a._v(" DOM题")]),a._v(" "),e("h4",{attrs:{id:"事件流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事件流"}},[a._v("#")]),a._v(" 事件流")]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("将A元素拖拽并放置到B元素中，B元素需要做哪项操作\\(\\)？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. event.preventDefault()\nB. event.prevent()\nC. event.drag()\nD. event.drop()\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("以下不支持冒泡的鼠标事件为\\( \\)？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. mouseover\nB. click\nC. mouseleave\nD. mousemove\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("在javascript中，用于阻止默认事件的默认操作的方法是\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. stopDeafault()\nB. stopPropagation()\nC. preventDefault()\nD. preventDefaultEven()\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("事件传播的三个阶段是什么\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("目标 -> 捕获 -> 冒泡\n冒泡 -> 目标 -> 捕获\n目标 -> 冒泡 -> 捕获\n捕获 -> 目标 -> 冒泡\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面有关 javascript 常见事件的触发情况，描述错误的是？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. onchange：用户改变域的内容\nB. onkeypress：某个键盘的键被按下或按住\nC. onmousedown：某个鼠标按键被按下\nD. onblur：元素获得焦点\n复制代码\n")])])]),e("p",[e("strong",[a._v("答案")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ACCDD\n复制代码\n")])])]),e("h4",{attrs:{id:"dom遍历"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dom遍历"}},[a._v("#")]),a._v(" DOM遍历")]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下列哪项不属于DOM查找节点的属性\\(\\)？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. parentObj.firstChild\nB. parentObj.children\nC. neborNode.previousSibling\nD. neborNode.siblings\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("DOM中，给父节点添加子节点的正确方法为\\(\\)？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. appendChild(parentNode,newNode);\nB. append(parentNode,newNode);\nC. parentNode.append(newNode);\nD. parentNode.appendChild(newNode);\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("JavaScript中document.getElementById\\(\\)返回值的类型为？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. Array\nB. Object\nC. String\nD. Function\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("DOM中，给父节点添加子节点的正确方法为\\(\\)？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. appendChild(parentNode,newNode);\nB. append(parentNode,newNode);\nC. parentNode.append(newNode);\nD. parentNode.appendChild(newNode);\n复制代码\n")])])]),e("p",[e("strong",[a._v("答案")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("DDBD\n复制代码\n")])])]),e("h4",{attrs:{id:"其他-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他-3"}},[a._v("#")]),a._v(" 其他")]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("DOM元素的以下属性改变会导致重排\\(reflows\\)的是\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("outline\nvisiblity\nfont-size\nbackground-color\n复制代码\n")])])]),e("p",[e("strong",[a._v("答案")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("C\n复制代码\n")])])]),e("h3",{attrs:{id:"bom题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bom题"}},[a._v("#")]),a._v(" BOM题")]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("setInterval\\(updateClock,60\\)的含义是\\( \\)？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. 每隔60秒调用一次updateClock()\nB. 每隔60毫秒调用一次updateClock()\nC. 每隔60分钟调用一次updateClock()\nD. 每分钟调用60次updateClock()\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("使用方法\\( \\)可以获取到地理位置所在的经纬度？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. Geolocation.watchPosition()\nB. Geolocation.getCurrentPosition()\nC. Geolocation.getPosition()\nD. Geolocation.Position()\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("setInterval\\(\"alert\\('welcome'\\);\",1000\\);这段代码的意思是\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. 等待1000秒后，再弹出一个对话框\nB. 等待1秒钟后弹出一个对话框\nC. 每隔一秒钟弹出一个对话框\nD. 语句报错,语法有问题\n复制代码\n")])])]),e("p",[e("strong",[a._v("答案")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("BBC\n复制代码\n")])])]),e("h3",{attrs:{id:"es6题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#es6题"}},[a._v("#")]),a._v(" ES6题")]),a._v(" "),e("h4",{attrs:{id:"箭头函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数"}},[a._v("#")]),a._v(" 箭头函数")]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下列对js箭头函数描述错误的是\\(\\)\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. 箭头函数没有原型属性\nB. 箭头函数不绑定this，会捕获其所在的上下文的this值，作为自己的this值\nC. 箭头函数可以作为构造函数，使用new\nD. 箭头函数不绑定arguments，取而代之用rest参数解决\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("关于箭头函数下列说法错误的一项是：\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. 函数体内this的指向是定义时所在的对象，而不是使用时所在的对象\nB. 箭头函数内不能使用arguments对象\nC. 箭头函数不能使用yield命令\nD. 可以使用new创建一个箭头函数的实例\n复制代码\n")])])]),e("p",[e("strong",[a._v("答案")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("CD\n复制代码\n")])])]),e("h4",{attrs:{id:"promise"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#promise"}},[a._v("#")]),a._v(" promise")]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("关于将 Promise.all 和 Promise.race 传入空数组的两段代码的输出结果说法正确的是：\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("Promise.all([]).then((res) => {\n    console.log('all');\n});\nPromise.race([]).then((res) => {\n    console.log('race');\n});\n复制代码\nA. all 和 race 都会被输出\nB. all 和 race 都不会被输出\nC. all 会被输出，而 race 不会被输出\nD. all 不会被输出，race 会被输出\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("以下方案中，不是用于解决回调陷阱的的是：\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. Promise\nB. Generator\nC. async\nD. Proxy\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("在 ECMAScript6 中，不属于promise的状态是:\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. Pending\nB. Pause\nC. Fulfilled\nD. Rejected\n复制代码\n")])])]),e("p",[e("strong",[a._v("答案")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("CDB\n复制代码\n")])])]),e("h4",{attrs:{id:"解构赋值"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解构赋值"}},[a._v("#")]),a._v(" 解构赋值")]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("关于ES6解构表达式,描述正确的是\\(\\)\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('let [a,b, c,d, e] = "hello"; \n复制代码\nA. e = "hello";\nB. 其它都为undefined\nC. 当中 a = "h", b = "e";\nD. 语法报错\n复制代码\n')])])]),e("p",[e("strong",[a._v("答案")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("C\n复制代码\n")])])]),e("h2",{attrs:{id:"多选题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多选题"}},[a._v("#")]),a._v(" 多选题")]),a._v(" "),e("h3",{attrs:{id:"js基础-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js基础-2"}},[a._v("#")]),a._v(" JS基础")]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面哪些数组方法会改变原数组\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. push \nB. concat \nC. splice \nD. map\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面可以声明数字的js代码是\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. const a = 0xa1\nB. const a = 076\nC. const a = 0b21\nD. const a = 7e2\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("以下属于操作符 typeof 的返回值的是：\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("(1)function\n(2) object\n(3) null\n(4) array\n(5) NaN\n(6) bigint\n(7) regexp\n(8) undefined\n复制代码\nA. (1)、(2)、(3)、(4)、(5)、(6)、(7)、(8)\nB. (1)、(2)、(3)、(8)\nC. (1)、(2)、(8)\nD. (1)、(2)、(6)、(8)\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("以下\\(\\)结果等于字符串string\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. typeof 'string'\nB. String('string').toString()\nC. 'string'.split('').sort().join('')\nD. (function(string){return string})('string')\nE. JSON.parse('{\"string\":\"string\"}').string\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面的等式成立的是\\?\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. parseInt(46.8) `==` parseFloat(46.8)\nB. NaN `!==` NaN\nC. isNaN('abc') `==` NaN\nD. typeof NaN `===` 'number'\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("以下哪些选项可以将集合A转化为数组？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. Array.from(A)\nB. [].slice.apply(A)\nC. [...A]\nD. [].map.call(A, o => o)\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下列结果返回 true 的是\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. null == undefined\nB. null === undefined\nC. null === null\nD. NaN == null\nE. NaN === NaN\nF. Infinity + 1 !== Infinity\n复制代码\n")])])]),e("p",[e("strong",[a._v("答案")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("AC ABD D ABDE BD ABCD AC\n复制代码\n")])])]),e("h3",{attrs:{id:"js深入-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js深入-2"}},[a._v("#")]),a._v(" JS深入")]),a._v(" "),e("ol",[e("li",[a._v("关于以下代码，说法正确的有哪些？")])]),a._v(" "),e("p",[a._v("function Person() { } var person = new Person();")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. 每一个原型都有一个constructor属性指向关联的构造函数。\nB. 每一个对象都有一个prototype属性。\nC. Object.getPrototypeOf(person) === Person.prototype\nD. person.constructor === Person\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下列在 JS 时间循环机制中属于微任务\\(microTask\\)的是？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. process.nextTick\nB. promise\nC. setTimeout\nD. setInterval\n复制代码\n")])])]),e("p",[e("strong",[a._v("答案")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ACD AB\n复制代码\n")])])]),e("h3",{attrs:{id:"es6"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#es6"}},[a._v("#")]),a._v(" ES6")]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("以下关于let和const的说法中正确的是:\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. let声明的变量值和类型都可以改变\nB. const声明的常量不可以改变\nC. 两者都不存在变量提升，同时存在暂时性死区，只能在声明的位置后面使用\nD. const可以先声明再初始化，可以后赋值\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面关于Promise说法正确的是\\(注意“返回结果”的意思包含成功或者失败\\)\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. Promise.all在所有给定的promise都fulfilled后才返回结果\nB. Promise.race在给定的promise中，某个fulfilled后才返回结果\nC. promise.then的回调函数中，可以返回一个新的promise\nD. 对于一个向后台获取数据已经产生结果的promise:p1，再次调用p1.then，不会去重新发起请求获取数据\n复制代码\n")])])]),e("p",[e("strong",[a._v("答案")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ABC CD\n复制代码\n")])])]),e("h3",{attrs:{id:"dom"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dom"}},[a._v("#")]),a._v(" DOM")]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下列关于使用 JS 修改元素样式的代码，正确的有哪些？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("document.body.style.['background-color'] = '#fff'\ndocument.body.style.setProperty('background-color', '#fff')\ndocument.body.style = 'background-color': #fff'\ndocument.body.style.fontSize = '14px'\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下列方法可用于阻止事件冒泡的有\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("A. event.cancelBubble = true;\nB. event.stopPropagation();\nC. event.preventDefault();\nD. return false;\n复制代码\n")])])]),e("p",[e("strong",[a._v("答案")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("BCD ABD\n复制代码\n")])])]),e("h2",{attrs:{id:"填空题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#填空题"}},[a._v("#")]),a._v(" 填空题")]),a._v(" "),e("h3",{attrs:{id:"类型检测"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#类型检测"}},[a._v("#")]),a._v(" 类型检测")]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("在JavaScript中，有var arr = \\[\\]; typeof arr的结果为\n")])])])]),a._v(" "),e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("以下使用 typeof 操作符的代码的输出结果为\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("var x = typeof x\nvar res = typeof typeof x;\nconsole.log(x, res)\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("\\[typeof null, null instanceof Object\\]的结果是什么\n")])])])]),a._v(" "),e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("typeof typeof 0\n")])])])]),a._v(" "),e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("JavaScript的typeof运算符的可能结果为array？解释为什么\n")])])])]),a._v(" "),e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面代码的输出结果是多少？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("var arr = [];\nconsole.log(typeof arr, Object.prototype.toString.call(arr));\n复制代码\n")])])]),e("ol",[e("li",[a._v("console.log(Object.prototype.toString.call(undefined))")])]),a._v(" "),e("h4",{attrs:{id:"类型转换"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#类型转换"}},[a._v("#")]),a._v(" 类型转换")]),a._v(" "),e("ol",[e("li",[a._v('表达式 "2"+3+4 的值为')]),a._v(" "),e("li",[a._v("console.log('5' + 3, 5 + '3')")]),a._v(" "),e("li",[a._v("var a=parseInt(“111办公室”);alert(a);")]),a._v(" "),e("li",[a._v('["0x1", "0x2", "0x3"].map(parseInt) 的结果')]),a._v(" "),e("li",[a._v("在js中执行 1+'1'的结果是？")]),a._v(" "),e("li",[a._v("在js中执行 parseInt('77',40)的结果是?")])]),a._v(" "),e("h4",{attrs:{id:"逻辑判断-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#逻辑判断-2"}},[a._v("#")]),a._v(" 逻辑判断")]),a._v(" "),e("ol",[e("li",[a._v("请给出 [5<6<3,3<2<4] 代码的运行结果")]),a._v(" "),e("li",[a._v("(2<3)||(3<2) 表达式将返回值为")]),a._v(" "),e("li",[a._v("console.log(true||false&&false, true&&false||true)的输出结果是？")])]),a._v(" "),e("h3",{attrs:{id:"其他-4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他-4"}},[a._v("#")]),a._v(" 其他")]),a._v(" "),e("ol",[e("li",[a._v("1 + - + + + - + 1 的结果是")]),a._v(" "),e("li",[a._v("[ 'a', ,'b', ,].length 的结果是")])]),a._v(" "),e("h2",{attrs:{id:"程序题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#程序题"}},[a._v("#")]),a._v(" 程序题")]),a._v(" "),e("h3",{attrs:{id:"js基础-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js基础-3"}},[a._v("#")]),a._v(" JS基础")]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面两个程序的输出结果分别是？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("// case 1\nfunction showCase(value) {\n    switch(value) {\n    case 'A':\n        console.log('Case A');\n        break;\n    case 'B':\n        console.log('Case B');\n        break;\n    case undefined:\n        console.log('Case undefined');\n        break;\n    default:\n        console.log('Case default');\n    }\n}\nshowCase(new String('A'));\n复制代码\n// case 2\nfunction showCase(value) {\n    switch(value) {\n    case 'A':\n        console.log('Case A');\n        break;\n    case 'B':\n        console.log('Case B');\n        break;\n    case undefined:\n        console.log('Case undefined');\n        break;\n    default:\n        console.log('Case default');\n    }\n}\nshowCase(String('A'));\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("p标签的的内容会显示什么？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('<html>\n    <body>\n        <p id="demo"></p>\n        <script type="text/javascript">\n            var x = 10;\n            var y = "10";\n            document.getElementById("demo").innerHTML = Boolean(x == y);\n        <\/script>\n    </body>\n</html>\n复制代码\n')])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("document.write的结果会是什么？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("function funcA(x){\n    var temp = 4;\n\n    function funcB(y){\n        document.write( ++x + y + (temp--));\n    }\n\n    funcB(5);\n}\n\nfuncA(6)\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("alert的结果会是多少\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("var varArr = function(i,j,str) {  \n    return j == 0 ? str : varArr(i,--j,(str+= \" \" + i[j]));\n}\nvar arr = new Array('apple','orange','peach','lime');\nvar str = varArr(arr,arr.length,\"\");\nalert(str);\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的输出结果是多少？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('function greetingMaker(greeting) { \n    function addName(name) {    \n        greeting  = greeting.split(\' \').reverse().join("-");\n        return greeting + " " + name;\n    }\n    \n    return addName;\n}\n\nvar daytimeGreeting = greetingMaker("Good Day to you");\nalert(daytimeGreeting(name)); \n复制代码\n')])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的输出结果是多少？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("String.prototype.GetNum = function() { \n    var regEx = /[^\\d]/g; \n    return this.replace(regEx, ''); \n};\n\nvar str = \"a1b2c3\";\nstr = str.GetNum();\nalert(str);\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的输出结果是多少？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('function sum(a, b) {\n  return a + b;\n}\nsum(1, "2");\n复制代码\n')])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的输出结果是多少？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('var str = "我非常喜欢编程";\nstr.length = 3;\nconsole.log(str);\n复制代码\n')])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的输出结果是多少？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("let number = 0;\nconsole.log(number++);\nconsole.log(++number);\nconsole.log(number);\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的输出结果是多少？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("function nums(a, b) {\n    if (a > b)\n        console.log('a is bigger')\n    else \n        console.log('b is bigger')\n    return a + b\n}\nconsole.log(nums(4, 2))\nconsole.log(nums(1, 2))\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序输出结果是多少？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("function side(arr) {\n    arr[0] = arr[2];\n}\nfunction func1(a, b, c = 3) {\n    c = 10;\n    side(arguments);\n    console.log(a + b + c);\n}\nfunction func2(a, b, c) {\n    c = 10;\n    side(arguments);\n    console.log(a + b + c);\n}\nfunc1(1, 1, 1);\nfunc2(1, 1, 1);\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面代码的输出结果是什么？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("var a = 3;\nvar b = new Number(3);\nvar c = 3;\n\nconsole.log(a == b);\nconsole.log(a === b);\nconsole.log(b === c);\n\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("执行下列语句后，a.length的值为？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("var a = [];\na.push(1, 2);\na.shift(3, 4);\na.concat([5, 6]);\na.splice(0, 1, 2);\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面这几段代码分别输出结果是多少？为什么？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("var a = {}, b = '123', c = 123;\na[b] = 'b';\na[c] = 'c';\nconsole.log(a[b]);\n// example 2\nvar a = {}, b = Symbol('123'), c = Symbol('123');\na[b] = 'b';\na[c] = 'c';\nconsole.log(a[b]);\n// example 3\nvar a = {}, b = {key:'123'}, c = {key:'456'};\na[b] = 'b';\na[c] = 'c';\nconsole.log(a[b]);\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面每项的返回值是什么？为什么？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("null == undefined\n0.1 + 0.2 == 0.3\ntypeof NaN\ntypeof Function\ntypeof Object\ntypeof {}\n'a' + 1\n'a' - 1\nFunction instanceof Object\nObject instanceof Function\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的输出结果是多少？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("var array = []\nfor(var i = 0; i < 3; i++) {\n    array.push(() => i)\n}\nvar newArray = array.map(el => el())\nconsole.log(newArray)\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的输出结果是多少？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v(" function a(m, n) {\n        var b = function (l) {\n            return l <= m ? l * b(l + 1) : 1;\n        }\n\n        return b(m - n + 1);\n    }\n\nconsole.log(a(4, 2));\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的输出结果是多少？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("console.log(typeof undefined == typeof NULL);\nconsole.log(typeof function () {} == typeof class {});\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("执行后a和b.age的值分别为\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("var a = 10\nvar b = {\n    age: 11\n}\nfunction fn(x,y) {\n    --y.age;\n    return --x;\n}\nfn(a,b)\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的执行结果是：\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("var number = 4;\nvar numberFactorial = (function (number){\n    return (number === 0)? 1: number* factorial(number-1)\n})(number)\nconsole.log(numberFactorial)\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的输出结果是：\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("var array = []\nfor(var i = 0; i < 3; i++) {\n    array.push(() => i)\n}\nvar newArray = array.map(el => el())\nconsole.log(newArray)\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的输出结果是：\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('function addToList(item, list) {\n    return list.push(item)\n}\nconst result = addToList("nowcoder", ["hello"])\nconsole.log(result)\n\n复制代码\n')])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的输出结果是：\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("const first = () => { console.log('first'); return false; }\nconst second = () => { console.log('second'); return true; }\nconsole.log( first() && second() );\nconsole.log( second() || first() );\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面代码的输出结果是：\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("var s='12ab3cd', arr=s.split(/\\d/);\nconsole.log(arr[3],arr[4])\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的输出结果是：\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("function getAge(...args) {\n  console.log(typeof args);\n}\n\ngetAge(21);\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的输出结果是:\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("var arr=[1,2,3];\narr.push(arr.shift())\nconsole.log(arr[1],arr[2])\n复制代码\n")])])]),e("h3",{attrs:{id:"js深入-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js深入-3"}},[a._v("#")]),a._v(" JS深入")]),a._v(" "),e("h4",{attrs:{id:"this指向"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#this指向"}},[a._v("#")]),a._v(" this指向")]),a._v(" "),e("p",[a._v("题目解析："),e("strong",[a._v("this指向题目解析及扩展")]),a._v("[4]")]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下列程序的输出结果是多少？为什么？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("var x = 1;\n\nvar obj = {\n    x: 3,\n    fun:function () {\n        var x = 5;\n        return this.x;\n    }\n};\n\nvar fun = obj.fun;\nconsole.log( obj.fun(), fun() );\n\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下列程序的输出结果是多少？你能理清楚test函数的this指向吗？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("var a = 5;\n function test() { \n    a = 0; \n    alert(a); \n    alert(this.a); \n    var a;\n    alert(a); \n}\nnew test();\n\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下列程序的输出结果是多少？为什么？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("function fun () {\n    return () => {\n        return () => {\n            return () => {\n                console.log(this.name)\n            }\n        }\n    }\n}\nvar f = fun.call({name: 'foo'})\nvar t1 = f.call({name: 'bar'})()()\nvar t2 = f().call({name: 'baz'})()\nvar t3 = f()().call({name: 'qux'})\n\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("执行以下代码，输出结果分别是多少？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("let obj1 = {\n    a: 1,\n    foo: () => {\n        console.log(this.a)\n    }\n}\n// log1\nobj1.foo()\nconst obj2 = obj1.foo\n// log2\nobj2()\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的输出结果是什么？为什么？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("const Person = (name=\"wang\",age=10) => {\nthis.name = name;\nthis.age = age;\nreturn this.name +' is '+ this.age + 'years old'\n}\nlet result = new Person('zhang',11)\nconsole.log(result)\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("请表述以下代码的执行结果和原因\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("var person = {\n  age: 18,\n  getAge: function() {\n    return this.age;\n  }\n};\nvar getAge = person.getAge\ngetAge()\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("请按顺序写出打印结果，并说明原因。\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("var name = 'global';\nvar obj = {\n    name: 'local',\n    foo: function(){\n        this.name = 'foo';\n    }.bind(window)\n};\nvar bar = new obj.foo();\nsetTimeout(function() {\n    console.log(window.name);\n}, 0);\nconsole.log(bar.name);\n \nvar bar3 = bar2 = bar;\nbar2.name = 'foo2';\nconsole.log(bar3.name);\n\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的执行结果是：\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('var obj = {\n    name:"zhangsan",\n    sayName:function(){\n        console.info(this.name);\n    }\n}\n\nvar wfunc = obj.sayName;\nobj.sayName();\nwfunc();\nvar name = "lisi";\nobj.sayName();\nwfunc();\n复制代码\n')])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的输出结果是：\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("var name='test' \nvar a = {    \n    name: 'ass',    \n    getName: function() {    \n        return this.name;   \n    } \n} \nvar b = a.getName; \nb();\n复制代码\n")])])]),e("h4",{attrs:{id:"事件循环"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事件循环"}},[a._v("#")]),a._v(" 事件循环")]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下列程序的输出结果分别是多少？为什么？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("const promiseA = Promise.resolve('a')\npromiseA. then((res) => {\n    console.log(res)\n}).then((res) => {\n    console.log(res)\n})\nconst promiseB = Promise.resolve('b')\npromiseB. then((res) => {\n    console.log(res)\n})\npromiseB. then((res) => {\n    console.log(res)\n})\n\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的输出结果依次是多少？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("setTimeout(() => {\n    console.log(1)\n}, 0)\n\nconst P = new Promise((resolve, reject) => {\n    console.log(2)\n    setTimeout(() => {\n        resolve()\n        console.log(3)\n    }, 0)\n})\n\nP.then(() => {\n    console.log(4)\n})\nconsole.log(5)\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的输出结果是\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("setTimeout(function(){\n    console.log(1);\n}, 0)\nnew Promise(function(resolve){\n    console.log(2);\n    resolve();\n    console.log(3);\n}).then(function(){\n    console.log(4);\n})\nconsole.log(5);\n\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的输出结果是？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("(async () => {\n    console.log(1);\n    setTimeout(() => {\n        console.log(2);\n}, 0);\nawait new Promise((resolve, reject) => {\n    console.log(3);\n}).then(() => {\n    console.log(4);\n});\n    console.log(5);\n})();\n\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的输出结果是:\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("new Promise((resolve) => {\n    console.log('1')\n    resolve()\n    console.log('2')\n}).then(() => {\n    console.log('3')\n})\nsetTimeout(() => {\n    console.log('4')\n})\nconsole.log('5')\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的输出结果是:\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('var p1 = new Promise(function(resolve, reject){\n    resolve("2")\n})\nsetTimeout(function(){\n    console.log("1")\n},10)\np1.then(function(value){\n    console.log(value)\n})\nsetTimeout(function(){\n    console.log("3")\n},0)\n\n复制代码\n')])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的输出结果是：\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("setTimeout(function() {\n  console.log('setTimeout');\n}, 0);\nPromise.resolve().then(function() {\n  console.log('promise1');\n}).then(function() {\n  console.log('promise2');\n});\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("请表述以下代码的执行结果和原因\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("setTimeout(function() {\n    console.log(1)\n},0)\nnew Promise(function executor(resolve){\n    console.log(2)\n    for (var i = 0; i<10000; i++) {\n        i - 9999 && resolve()\n    }\n    console.log(3)\n}).then(function() {\n    console.log(4)\n})\nconsole.log(5)\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("在网页中有两个div块，html代码如下\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('<div class="outer">\n <div class="inner"></div>\n</div>\n复制代码\n')])])]),e("p",[a._v("对应的js代码如下：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("var outer = document.querySelector('.outer');\nvar inner = document.querySelector('.inner');\n\nfunction onClick() {\n    console.log('click');\n\n    setTimeout(function() {\n        console.log('timeout');\n    }, 0);\n\n    Promise.resolve().then(function() {\n        console.log('promise');\n    });\n\n    outer.setAttribute('data-random', Math.random());\n}\n\ninner.addEventListener('click', onClick);\nouter.addEventListener('click', onClick);\n复制代码\n")])])]),e("p",[a._v("当点击class为inner的div块时，控制台依次输出结果是什么？10. 下面程序的输出结果是？")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("(async () => {\n    console.log(1);\n    setTimeout(() => {\n        console.log(2);\n}, 0);\nawait new Promise((resolve, reject) => {\n    console.log(3);\n}).then(() => {\n    console.log(4);\n});\n    console.log(5);\n})();\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的输出结果是：\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("setTimeout(() => console.log('a'));\nPromise.resolve().then(\n   () => console.log('b’);\n ).then(\n   () => Promise.resolve('c').then(\n     (data) => {\n       setTimeout(() => console.log('d'));\n       console.log('f');\n       return data;\n     }\n   )\n ).then(data => console.log(data));\n\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的输出结果是：\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("console.log('one'); \nsetTimeout(function() { console.log('two'); }, 0); \nPromise.resolve()\n       .then(function() { console.log('three'); })\n console.log('four');\n\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的执行结果是：\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("setTimeout(function () {\n    console.log(C)\n},0)\nconsole.log('D')\nnew Promise(function(resolve){\n    console.log('E')\n    resolve()\n    console.log('F')\n}).then(function() {\n    console.log('G')\n})\nconsole.log('H')\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("有一个输出函数定义如下：\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("function log(msg, time) {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      console.log(msg);\n      resolve();\n    }, time);\n  });\n}\n复制代码\n")])])]),e("p",[a._v("则下面三段代码输出的结果是：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("// 第一段代码：\n(async () => {\n  for (let i = 0; i < 5; i++) {\n    await log(i, 1000);\n  }\n})();\n复制代码\n// 第二段代码：\n(async () => {\n  [ 1, 2, 3, 4 ].forEach(async (i) => {\n    await log(i, 1000);\n  });\n})();\n复制代码\n// 第三段代码：\n(async () => {\n  for (const i of [ 1, 2, 3, 4 ]) {\n    await log(i, 1000);\n  }\n})();\n复制代码\n")])])]),e("h4",{attrs:{id:"原型与原型链"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原型与原型链"}},[a._v("#")]),a._v(" 原型与原型链")]),a._v(" "),e("p",[a._v("传送门: "),e("strong",[a._v("原型与原型链题目解析")]),a._v("[5]")]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的输出结果依次是？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("function Fn1(name) {\n    if(name){\n    this.name = name;\n    }\n}\nFn1.prototype.name=\"jack\"\nlet a = new Fn1();\nconsole.log('a:', a.name);\n\nfunction Fn2(name) {\n    this.name = name;\n}\nFn2.prototype.name=\"jack\"\nlet b = new Fn2();\nconsole.log('b:', b.name);\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的输出结果是？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("var Foo = (function() {\n    var x = 0;\n    function Foo() {}\n    Foo.prototype.increment = function() {\n        ++x;\n        console.log(x);\n    };\n    return Foo;\n})();\n \nvar a = new Foo();\na.increment();\na.increment();\nvar b = new Foo();\na.increment();\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的输出结果是？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("var name = 'Jay'\nfunction Person(name){\n    this.name = name;\n    console.log(this.name)\n}\nvar a = Person('Tom')\nconsole.log(name)\nconsole.log(a)\nvar b = new Person('Michael')\nconsole.log(b)\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("请表述以下代码的执行结果和原因\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("class A{}\nclass B extends A{}\nconst a = new A()\nconst b = new B()\na.__proto__\nb.__proto__\nB. __proto__\nB. prototype.__proto__\nb.__proto__.__proto__\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("请表述以下代码的执行结果和原因\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("function test() {           \n    getName = function() { \n        Promise.resolve().then(() => console.log(0)); \n        console.log(1);               \n    };\n\n    return this; \n}\ntest.getName = function() { \n     setTimeout(() => console.log(2), 0); \n     console.log(3);               \n};\ntest.prototype.getName = function() {    \n\n     console.log(4); \n};       \nvar getName = function() { \n     console.log(5);             \n};\nfunction getName() {\n\n     console.log(6); \n}      \n      \ntest.getName(); \ngetName(); \ntest().getName(); \ngetName();  \nnew test.getName();\nnew test().getName();\nnew new test().getName();\n\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("请表述以下代码的执行结果和原因\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("var tmp = {};\nvar A = function() {};\nA. prototype = tmp;\n\nvar a = new A();\nA. prototype = {};\n\nvar b = Object.create(tmp);\nb.constructor = A. constructor;\n\nconsole.log(a instanceof A);\nconsole.log(b instanceof A);\n\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的执行结果是：\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("function Foo(){}\nFoo.prototype.z = 3;\nvar obj = new Foo();\nconsole.info(obj.z)\nobj.z = 10;\nconsole.info(obj.z);\ndelete obj.z;\nconsole.info(obj.z);\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的执行结果是：\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("const Book = {\n  price: 32\n}\nconst book = Object.create(Book);\nbook.type = 'Math';\ndelete book.price;\ndelete book.type;\nconsole.log(book.price);\nconsole.log(book.type);\n复制代码\n")])])]),e("h4",{attrs:{id:"作用域与预编译"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#作用域与预编译"}},[a._v("#")]),a._v(" 作用域与预编译")]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面的程序会报错吗？如果不会，输出结果分别是多少？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('function sayHello() {\n    console.log(name);\n    console.log(age);\n    var name = "Tom";\n    let age = 18;\n} \nsayHello();\n复制代码\n')])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面的程序i的打印结果分别是多少？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("for (var i = 0; i < 3; i++) {\n    setTimeout(_ => {\n        console.log(i)\n    })\n}\n\nfor (let i = 0; i < 3; i++) {\n    setTimeout(_ => {\n        console.log(i)\n    })\n}\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的输出结果是：\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("console.log(a);\nvar a = 'a';\nconsole.log(b);\nlet b = 'b';\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的输出结果是：\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('var foo = "Hello";\n(function(){\n    var bar = " World";\n    alert(foo + bar);\n})();\nalert(foo + bar);\n复制代码\n')])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的输出结果是：\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("var a = 10;\n(function () {\n    console.log(a)\n    a = 5\n    console.log(window.a)\n    var a = 20;\n    console.log(a)\n})()\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面代码的输出结果是:\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("const a = 10\nfunction runFunction() {\n    const a = 20\n    console.log('inside', a)\n}\nrunFunction()\nconsole.log('outside', a)\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("请描述打印结果并说明原因\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("\"use strict\"\nvar name = 'Jay'\nvar person = {\n    name: 'Wang',\n    pro: {\n        name: 'Michael',\n        getName: function () {\n            return this.name\n        }\n    }\n}\nconsole.log(person.pro.getName)\nvar people = person.pro.getName\nconsole.log(people())\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的结果是：\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('<ul>\n    <li>1</li>\n    <li>2</li>\n    <li>3</li>\n    <li>4</li>\n</ul>\n<script>\nvar elements = document.getElementsByTagName("li");\nfor (var i=0;i<elements.length;i++){\n    elements[i].onclick =function( ){\n    alert(i); \n    };\n}\n复制代码\n')])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的输出结果是\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("compute(10,100);\nvar compute = function(A,B) {\n    console.info(A * B) ;\n};\nfunction compute(A,B){\n    console.info(A + B);\n}\nfunction compute(A,B){\n    console.info((A + B)*2);\n}\ncompute(2,10);\n\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的执行结果是：\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('meili()\nfunction meili() {\n    console.log("meili")\n}\nmogu()\nvar mogu = function() {\n    console.log("mogu")\n}\n复制代码\n')])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面两个代码片段输出结果有什么区别？为什么？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("// 片段1\ncheck('first');\nfunction check(ars){\n    console.log(ars);\n}\n// 片段2\ncheck('second');\nvar check= function(ars){\n    console.log(ars);\n}\n复制代码\n")])])]),e("h3",{attrs:{id:"es6-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#es6-2"}},[a._v("#")]),a._v(" ES6")]),a._v(" "),e("h4",{attrs:{id:"对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对象"}},[a._v("#")]),a._v(" 对象")]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面代码的输出结果是？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("const student = {name: 'ZhangSan'}\nObject.defineProperty(student, 'age', {value: 22})\nconsole.log(student)\nconsole.log(Object.keys(student))\n复制代码\n")])])]),e("h4",{attrs:{id:"generator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#generator"}},[a._v("#")]),a._v(" generator")]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下列程序的输出结果是多少？为什么？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("function * cb(x, y) {\n    for(let i = Math.ceil(x); i <= y; i++) {\n        yield i;\n    }\n}\n\nvar a = cb(6, 9);\nconsole.log(a.next());\nconsole.log(a.next());\n复制代码\n")])])]),e("h4",{attrs:{id:"扩展运算符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#扩展运算符"}},[a._v("#")]),a._v(" 扩展运算符")]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的输出结果是：\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("function fn(...args) {\n  console.log(typeof args);\n}\nfn(21);\n复制代码\n")])])]),e("h4",{attrs:{id:"promise-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#promise-2"}},[a._v("#")]),a._v(" promise")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("Promise.reject(0)\n       .catch(e => e)\n       .catch(e => console.log(e))\n复制代码\n")])])]),e("h4",{attrs:{id:"class"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#class"}},[a._v("#")]),a._v(" class")]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("请写出下面ES6代码编译后所生成的ES5代码\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("class Person {\n     constructor (name) {\n          this.name = name;\n     }\n     greet () {\n          console.log(`Hi, my name is ${this.name}`);\n     }\n     greetDelay (time) {\n          setTimeout(() => {\n               console.log(`Hi, my name is ${this.name}`);\n          }, time);\n     }\n}\n\n复制代码\n")])])]),e("h4",{attrs:{id:"标签模板"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#标签模板"}},[a._v("#")]),a._v(" 标签模板")]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("下面程序的输出结果是多少？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("function getPersonInfo (one, two, three) {\n    console.log(one)\n    console.log(two)\n    console.log(three)\n}\nconst person = 'Lydia'\nconst age = 21\ngetPersonInfo `${person} is ${age} years old`\n复制代码\n")])])]),e("h4",{attrs:{id:"module"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#module"}},[a._v("#")]),a._v(" module")]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("请写出index里面的输出结果\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('// module.js\nexport default () => "Hello world"\nexport const name = "nowcoder"\n// index.js\nimport * as data from "./module"\nconsole.log(data)\n\n复制代码\n')])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("有a.js和b.js两个文件，请写出b文件中代码的输出\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("// a.js\nlet a = 1\nlet b = {}\nsetTimeout(() => {    \na = 2    \nb.b = 2\n}, 100)\nmodule.exports = { a, b }\n\n// b.js\nconst a = require('./a')\nconsole.log(a.a)\nconsole.log(a.b)\nsetTimeout(() => {    \n    console.log(a.a)    \n    console.log(a.b)\n}, 500)\n\n复制代码\n")])])]),e("h3",{attrs:{id:"其他-5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他-5"}},[a._v("#")]),a._v(" 其他")]),a._v(" "),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("输出结果是：\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("<div id=\"box1\">\n    <div id=\"box2\">\n        content\n    </div>\n</div>\n<script>\nconst $ = document.querySelector.bind(document);\nconst box1 = $('#box1');\nconst box2 = $('#box2');\n\nbox1.addEventListener('click', () =>{\n    console.log('box1 true');\n}, true);\n\nbox1.addEventListener('click', () =>{\n    console.log('box1 false');\n}, false);\n\nbox2.addEventListener('click', () =>{\n    console.log('box2 true');\n}, true);\n\nbox2.addEventListener('click', () =>{\n    console.log('box2 false');\n}, false);\n<\/script>\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("输出结果是：\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('$(function () { \n    function fn1( value ) {\n        alert( value );\n    }\n    function fn2( value ) {\n        fn1("A");\n        return false;\n    }\n    var callbacks = $.Callbacks();\n    callbacks.add( fn1 ); \n    callbacks.fire( "B" );\n    callbacks.add( fn2 ); \n    callbacks.fire( "C" );\n})\n复制代码\n')])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("实现在p元素后添加“Hello World\\!”，则横线处应使用的方法为\\( \\)？\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('<html>\n    <head>\n        <script type="text/javascript" src="/jquery/jquery.js"><\/script>\n        <script type="text/javascript">\n            $(document).ready(function(){\n                $("button").click(function(){\n                    $("<b>Hello World!</b>").______("p");\n                });\n            });\n        <\/script>\n    </head>\n    <body>\n        <p>This is a paragraph.</p>\n        <p>This is another paragraph.</p>\n        <button>在每个p元素的结尾添加内容</button>\n    </body>\n</html>\n复制代码\n')])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("输出结果是：\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("<div id=\"box1\">\n  <div id=\"box2\">\n    content\n  </div>\n</div>\n<script>\nconst $ = document.querySelector.bind(document);\nconst box1 = $('#box1');\nconst box2 = $('#box2');\nbox1.addEventListener('click', () => {\n  console.log('box1 true');\n}, true);\nbox1.addEventListener('click', () => {\n  console.log('box1 false');\n}, false);\nbox2.addEventListener('click', () => {\n  console.log('box2 true');\n}, true);\nbox2.addEventListener('click', () => {\n  console.log('box2 false');\n}, false);\n<\/script>\n复制代码\n")])])]),e("ol",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("请选下面代码输出1的次数\n")])])])])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("var vm = new Vue({  \nel: '#example',  \ndata: {    \n    message: 'Hello'  \n},  \ncomputed: {    \n    test: function () {      \n        console.log(1)      \n        return this.message    \n    }  \n},  \ncreated: function (){    \n        this.message = 'World'    \n        for (var i = 0; i < 5; i++) {        \n            console.log(this.test)    \n        }  \n    }\n})\n\n复制代码\n")])])]),e("p",[a._v("关于本文")]),a._v(" "),e("h1",{attrs:{id:"来源-战场小包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#来源-战场小包"}},[a._v("#")]),a._v(" 来源：战场小包")]),a._v(" "),e("p",[a._v("https://juejin.cn/post/7023271065392513038")])])}),[],!1,null,null,null);e.default=n.exports}}]);