(window.webpackJsonp=window.webpackJsonp||[]).push([[157],{448:function(e,t,a){"use strict";a.r(t);var r=a(4),s=Object(r.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"对于已经-import-但未实际使用的模块使用-webpack-还会对它打包吗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对于已经-import-但未实际使用的模块使用-webpack-还会对它打包吗"}},[e._v("#")]),e._v(" 对于已经 import 但未实际使用的模块使用 webpack 还会对它打包吗")]),e._v(" "),t("p",[e._v("tree shaking 通过扫描所有 ES6 的 export，找出被 import 的内容并添加到最终代码中。tree shaking 的使用时 "),t("strong",[e._v("源码必须遵循 ES6 的模块规范 (import & export)，如果是 CommonJS 规范 (require) 则无法使用。")]),e._v(' 也就是说，需要给 babel 里面配置一下"es6 不要解析"：')]),e._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('// .babelrc\n\n{\n    "presets": [\n        ["es2015", {"modules": false}]\n    ]\n}\n')])])]),t("p",[e._v("tree shaking 在 webpack2.0 里面需要进行手动设置，webpack3 和 webpack4 里面为默认设置。")]),e._v(" "),t("h3",{attrs:{id:"一、对于方法的处理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、对于方法的处理"}},[e._v("#")]),e._v(" 一、对于方法的处理")]),e._v(" "),t("p",[t("strong",[e._v("通过 tree shaking 设置后，webpack 里面会将没有使用的方法标记为： "),t("code",[e._v("unused harmony export xxx")]),e._v("，但代码仍然保留。（webpack 编译后的源码里面仍然包含没有使用的方法）")]),e._v(" 随后使用"),t("code",[e._v("UglifyJSPlugin")]),e._v("进行第二步，将已经标记的没有使用的方法进行删除。")]),e._v(" "),t("h3",{attrs:{id:"二、对于类的处理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、对于类的处理"}},[e._v("#")]),e._v(" 二、对于类的处理")]),e._v(" "),t("p",[t("strong",[e._v("与标记方法不同，webpack 打包时会将整个类进行标记，也就是说，即使类里面的方法没有被使用也会进行打包编译。")]),e._v(" 这表明 webpack tree shaking 只处理顶层内容，例如类和对象内部都不会再被分别处理。 综上所述，可以得出 "),t("strong",[e._v("“对于已经 import 但未实际使用的模块使用 webpack 还会对它打包”")]),e._v(" 。 当然，想要精简代码是可以实现的，具体文章参考："),t("a",{attrs:{href:"https://www.jianshu.com/p/cf930283d404",target:"_blank",rel:"noopener noreferrer"}},[e._v("Webpack 之 treeShaking(opens new window)"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("Author")]),e._v(" "),t("p",[e._v("回答者: "),t("a",{attrs:{href:"https://github.com/hwb2017",target:"_blank",rel:"noopener noreferrer"}},[e._v("hwb2017(opens new window)"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("模块/文件级别的 tree shaking，如果模块没有导入但是模块内的函数存在副作用(对外部变量进行读写)的话，也会被打包。解决方法是在模块所在的 npm 包的 package.json 中增加 sideEffects: false, 表示所有的模块/文件都是没有副作用的，或者有副作用的话被删了也没关系")]),e._v(" "),t("p",[e._v("参考 https://webpack.js.org/guides/tree-shaking/")])])}),[],!1,null,null,null);t.default=s.exports}}]);